`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// This module instantiates the firmware to capture the 400 MHz DDR serial conversion data from 5 LTC2194 fast ADC's. 
// The mode control registers of the fast ADC's are programmed by the FastADCs_SPI.v module. 
//
// The 5 ADC's share an ENC clock, which is generated by the ODDR and OBUFDS primitives.
// ISERDESE2 primitives instantiated in the LTC2194.v firmware modules capture the conversion data, where ISERDESE2 executes coarse bit-slip delays and the IDELAYE2 primitives fine-tune the data line delays. 
// The coarse bit-slips and fine delay taps are specified in this module.
// IDELAYCTRL primitives for the IDELAYE2 primitives in the LITC2194.v modules are instantiated in this module, along with specifying the IDELAYCTRL locations. 
//
// Daniel Schussheim
//////////////////////////////////////////////////////////////////////////////////


module FastADCsDDR(
    // Clocking
    input wire clk100_out, clk100,
    input wire clk200,
    input wire clk400, clk400B,
    // Reset
    input wire rst,
    // Encode
    output wire ENC_p,
    output wire ENC_n,
    // Frame inputs
    input wire FR0_p,
    input wire FR0_n,
    input wire FR1_p,
    input wire FR1_n,
    input wire FR2_p,
    input wire FR2_n,
    input wire FR3_p,
    input wire FR3_n,
    input wire FR4_p,
    input wire FR4_n,
    // Serial data lines
    input wire [1:0] D00_p,
    input wire [1:0] D00_n,
    input wire [1:0] D01_p,
    input wire [1:0] D01_n,
    input wire [1:0] D10_p,
    input wire [1:0] D10_n,
    input wire [1:0] D11_p,
    input wire [1:0] D11_n,
    input wire [1:0] D20_p,
    input wire [1:0] D20_n,
    input wire [1:0] D21_p,
    input wire [1:0] D21_n,
    input wire [1:0] D30_p,
    input wire [1:0] D30_n,
    input wire [1:0] D31_p,
    input wire [1:0] D31_n,
    input wire [1:0] D40_p,
    input wire [1:0] D40_n,
    input wire [1:0] D41_p,
    input wire [1:0] D41_n,
    // Deserialized data
    output wire signed [15:0] f_in_0,
    output wire signed [15:0] f_in_1,
    output wire signed [15:0] f_in_2,
    output wire signed [15:0] f_in_3,
    output wire signed [15:0] f_in_4,
    output wire signed [15:0] f_in_5,
    output wire signed [15:0] f_in_6,
    output wire signed [15:0] f_in_7,
    output wire signed [15:0] f_in_8,
    output wire signed [15:0] f_in_9,
    // Deserialized frames
    output wire [7:0] fr0_out,
    output wire [7:0] fr1_out,
    output wire [7:0] fr2_out,
    output wire [7:0] fr3_out,
    output wire [7:0] fr4_out
);

wire clk100_out_int;
// ODDR for source synchronous ENC.
ODDR #(.DDR_CLK_EDGE("OPPOSITE_EDGE"), .INIT(1'b0), .SRTYPE("SYNC")) 
ODDR_ENC(.Q(clk100_out_int), .C(clk100_out), .CE(1'b1), .D1(1'b1), .D2(1'b0), .R(1'b0), .S(1'b0));
// Output buffer for ENC
OBUFDS #(.IOSTANDARD("LVDS_25"))
obufds_inst(.O(ENC_p), .OB(ENC_n), .I(clk100_out_int));

// IDELAYCTRL: IDELAYE2/ODELAYE2 Tap Delay Value Control
wire RDY0, RDY1;
(* LOC = "IDELAYCTRL_X0Y0" *)IDELAYCTRL inputdelay0(.RDY(RDY0), .REFCLK(clk200), .RST(rst));
(* LOC = "IDELAYCTRL_X0Y2" *)IDELAYCTRL inputdelay1(.RDY(RDY1), .REFCLK(clk200), .RST(rst)); 

// Static bit-slips for both wires of each channel
parameter [2:0] 
    N00 = 3'd4, N01 = 3'd4, N10 = 3'd4, N11 = 3'd4,
    N20 = 3'd4, N21 = 3'd4, N30 = 3'd4, N31 = 3'd4,
    N40 = 3'd4, N41 = 3'd4, N50 = 3'd4, N51 = 3'd4,
    N60 = 3'd4, N61 = 3'd4, N70 = 3'd4, N71 = 3'd4, 
    N80 = 3'd4, N81 = 3'd4, N90 = 3'd4, N91 = 3'd4;
// Delay taps for both wires of each channel and frame of each chip
parameter 
    dly00 = 8,  dly01 = 9,  dly10 = 10, dly11 = 9,  dlyf0 = 11, // delays for D00[0], D00[1], D01[0], D01[1], FR0 ([2,14],  [3,15],  [3,16],  [3,15],  [4,17])
    dly20 = 22, dly21 = 23, dly30 = 24, dly31 = 24, dlyf1 = 23, // delays for D10[0], D10[1], D11[0], D11[1], FR1 ([16,27], [17,29], [18,30], [18,29], [16,30])
    dly40 = 19, dly41 = 15, dly50 = 14, dly51 = 13, dlyf2 = 14, // delays for D20[0], D20[1], D21[0], D21[1], FR2 ([13,24], [9,20],  [8,19],  [8,18],  [8,20])
    dly60 = 14, dly61 = 16, dly70 = 17, dly71 = 17, dlyf3 = 17, // delays for D30[0], D30[1], D31[0], D31[1], FR3 ([8,19],  [11,21], [11,22], [11,22], [10,23])
    dly80 = 16, dly81 = 17, dly90 = 16, dly91 = 16, dlyf4 = 17; // delays for D30[0], D30[1], D31[0], D31[1], FR3 ([10,22], [11,22], [10,21],  [10,22], [10,23])

////////// Module declarations \\\\\\\\\\
LTC2194DDR
    #(N00, N01, N10, N11,
      dly00, dly01, dly10, dly11, dlyf0)
fADC0
    (//Clock and reset in
     clk100, clk200, clk400, clk400B, rst,
     //Frame inputs
     FR0_p, FR0_n,
     //Data inputs
     D00_p, D00_n, D01_p, D01_n,
     //Deserialized outputs
     f_in_0, f_in_1, fr0_out
);

LTC2194DDR
   #(N20, N21, N30, N31,
     dly20, dly21, dly30, dly31, dlyf1)
fADC1
    (//Clock and reset in
     clk100, clk200, clk400, clk400B, rst,
     //Frame inputs
     FR1_p, FR1_n,
     //Data inputs
     D10_p, D10_n, D11_p, D11_n,
     //Deserialized outputs
     f_in_2, f_in_3, fr1_out
);

LTC2194DDR
    #(N40, N41, N50, N51,
     dly40, dly41, dly50, dly51, dlyf2)
fADC2
    (//Clock and reset in
     clk100, clk200, clk400, clk400B, rst,
     //Frame inputs
     FR2_p, FR2_n,
     //Data inputs
     D20_p, D20_n, D21_p, D21_n,
     //Deserialized outputs
     f_in_4, f_in_5, fr2_out
);

LTC2194DDR
    #(N60, N61, N70, N71,
      dly60, dly61, dly70, dly71, dlyf3)
fADC3
    (//Clock and reset in
     clk100, clk200, clk400, clk400B, rst,
     //Frame inputs
     FR3_p, FR3_n,
     //Data inputs
     D30_p, D30_n, D31_p, D31_n,
     //Deserialized outputs
     f_in_6, f_in_7, fr3_out
);

LTC2194DDR
    #(N80, N81, N90, N91,
      dly80, dly81, dly90, dly91, dlyf4)
fADC4
    (//Clock and reset in
     clk100, clk200, clk400, clk400B, rst,
     //Frame inputs
     FR4_p, FR4_n,
     //Data inputs
     D40_p, D40_n, D41_p, D41_n,
     //Deserialized outputs
     f_in_8, f_in_9, fr4_out
);

endmodule